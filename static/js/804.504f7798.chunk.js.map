{"version":3,"file":"static/js/804.504f7798.chunk.js","mappings":"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","sources":["components/Login/LoginForm/LoginForm.jsx","webpack://my-app/./src/components/Login/Login.module.css?3530","components/Login/Login.jsx","components/common/FormsControls/FormsControls.js","utils/validators/validators.js","webpack://my-app/./src/components/common/FormsControls/FormsControls.module.css?eb50"],"sourcesContent":["import React from \"react\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {maxLengthCreator, requiredField} from \"../../../utils/validators/validators\";\nimport {Input} from \"../../common/FormsControls/FormsControls\";\nimport s from \"./../../common/FormsControls/FormsControls.module.css\"\n\nconst maxLength30 = maxLengthCreator(30);\n\nconst LoginForm = ({handleSubmit, error}) => {\n    return (\n        <div>\n            <form onSubmit={handleSubmit} className={s.authForm}>\n                <div>\n                    <Field type=\"email\" component={Input} name={\"email\"}  placeholder={\"Email\"} validate={[requiredField, maxLength30]}/>\n                </div>\n                <div>\n                    <Field type=\"password\" component={Input} name={\"password\"} placeholder={\"Password\"} validate={[requiredField, maxLength30]}/>\n                </div>\n                <div>\n                    <div className={s.rememberMeBlock}>\n                        <Field type=\"checkbox\" component={\"input\"} name={\"rememberMe\"} id={\"checkbox\"}/>\n                        <label htmlFor=\"checkbox\" className={s.rememberMe}>remember me</label>\n                    </div>\n                </div>\n                {error\n                ?  <div className={s.formSummaryError}>\n                        {error}\n                    </div>\n                : null}\n                <div>\n                    <button>Submit</button>\n                </div>\n            </form>\n        </div>\n    )\n}\n\nconst LoginReduxForm = reduxForm({form: \"login\"})(LoginForm);\n\nexport default LoginReduxForm;","// extracted by mini-css-extract-plugin\nexport default {\"loginPage\":\"Login_loginPage__lfdk0\",\"loginHeader\":\"Login_loginHeader__2Wju-\"};","import React from \"react\";\nimport LoginReduxForm from \"./LoginForm/LoginForm\";\nimport {connect} from \"react-redux\";\nimport {login} from \"../../redux/auth-reducer\";\nimport {Navigate} from \"react-router-dom\";\nimport s from \"./Login.module.css\"\n\n\nconst Login = (props) => {\n    const onSubmit = (formData) => {\n        props.login(formData.email, formData.password, formData.rememberMe);\n    }\n    if(props.isAuth){\n        return <Navigate to=\"/profile\"/>\n    }\n    return (\n        <div className={s.loginPage}>\n            <h1 className={s.loginHeader}>Login</h1>\n            <LoginReduxForm onSubmit={onSubmit}/>\n        </div>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        isAuth: state.auth.isAuth\n    }\n}\n\nexport default connect(mapStateToProps, {login})(Login);\n\n","import React from \"react\";\nimport s from \"./FormsControls.module.css\"\n\nconst FormControl = ({input, meta, element, ...props}) => {\n    const hasError = meta.touched && meta.error;\n    return (\n        <div className={`${s.formControl} + ${hasError ? `${s.error}` : \"\"}`}>\n            {props.children}\n            {hasError\n                ?  <div className={s.messageError}>\n                    {hasError\n                        ? meta.error : undefined}\n                </div> : undefined}\n        </div>\n    )\n}\n\nexport const Textarea = (props) => {\n    const {input, meta, element, ...restProps} = props;\n    return (<FormControl {...props}>\n            <textarea {...input} {...restProps}/>\n    </FormControl>\n    )\n}\n\nexport const Input= (props) => {\n    const {input, meta, element, ...restProps} = props;\n    return (<FormControl {...props}>\n            <input {...input} {...restProps}/>\n        </FormControl>\n    )\n}\n\n","export const requiredField = value => {\n    if (value) {\n        return undefined;\n    } return \"required field\";\n}\n\nexport const maxLengthCreator = (maxLength) => (value) => {\n    if (value && value.length > maxLength) {\n        return `Max length is ${maxLength} symbols`\n    } return undefined;\n}","// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"FormsControls_formControl__NR1bV\",\"error\":\"FormsControls_error__wukgD\",\"messageError\":\"FormsControls_messageError__M-fxS\",\"formSummaryError\":\"FormsControls_formSummaryError__Rdvzq\",\"authForm\":\"FormsControls_authForm__uMX33\",\"rememberMeBlock\":\"FormsControls_rememberMeBlock__W2XYN\",\"rememberMe\":\"FormsControls_rememberMe__vkMIa\"};"],"names":["maxLength30","maxLengthCreator","reduxForm","form","_ref","handleSubmit","error","_jsx","children","_jsxs","onSubmit","className","s","authForm","Field","type","component","Input","name","placeholder","validate","requiredField","rememberMeBlock","id","htmlFor","rememberMe","formSummaryError","connect","state","isAuth","auth","login","props","Navigate","to","LoginReduxForm","formData","email","password","FormControl","input","meta","element","_objectWithoutProperties","_excluded","hasError","touched","concat","formControl","messageError","undefined","Textarea","restProps","_excluded2","_objectSpread","_excluded3","value","maxLength","length"],"sourceRoot":""}