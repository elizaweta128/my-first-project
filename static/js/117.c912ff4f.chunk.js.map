{"version":3,"file":"static/js/117.c912ff4f.chunk.js","mappings":"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","sources":["webpack://my-app/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatus/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://my-app/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://my-app/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/PostForm/PostForm.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/common/FormsControls/FormsControls.js","utils/validators/validators.js","webpack://my-app/./src/components/common/FormsControls/FormsControls.module.css?eb50"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"profileImage\":\"ProfileInfo_profileImage__5Evr1\",\"profileData\":\"ProfileInfo_profileData__m1bqM\",\"profileAvatar\":\"ProfileInfo_profileAvatar__2yGqg\"};","import React, {useEffect, useState} from \"react\";\n\nconst ProfileStatusWithHooks = (props) => {\n    let [editMode, setEditMode] = useState(false);\n    let [status, setStatus] = useState(props.status || \"\");\n\n    let activateEditMode = () => {\n        setEditMode(true);\n    };\n    let deactivateEditMode = () => {\n        setEditMode(false);\n        props.updateProfileStatus(status);\n    };\n    useEffect(() => {\n        setStatus(props.status || \"\");\n    }, [props.status]);\n    let onStatusChange = (e) => {\n        setStatus(e.currentTarget.value);\n    };\n    return (\n        <div>\n            {\n                editMode\n                    ? <div>\n                        <input type=\"text\" autoFocus={true} onBlur={deactivateEditMode} value={status}\n                               onChange={onStatusChange}/>\n                    </div>\n                    : <div>\n                        <span onDoubleClick={activateEditMode}>{props.status ? props.status : \"no status\"}</span>\n                    </div>\n            }\n        </div>\n    )\n}\n\n\nexport default ProfileStatusWithHooks;","import React from \"react\";\nimport s from \"./ProfileInfo.module.css\";\nimport Preloader from \"../../common/Preloader/Preloader\";\nimport avatar from \"../../../assets/avatar_users.jpg\";\nimport ProfileStatusWithHooks from \"./ProfileStatus/ProfileStatusWithHooks\";\n\n\nconst ProfileInfo = ({profile, status, updateProfileStatus}) => {\n    if (!profile) {\n        return <Preloader/>\n    }\n    return (\n        <div>\n            <div>\n                <div className={s.profileData}>\n                    <div className={s.profileAvatar}>\n                        <img src={profile.photos.small ? profile.photos.large : avatar} alt=\"\"/>\n                    </div>\n                    <div>\n                        <div>\n                            <div>\n                                {profile.fullName}\n                            </div>\n                            <ProfileStatusWithHooks status={status} updateProfileStatus={updateProfileStatus}/>\n                            <div>\n                                {profile.aboutMe}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\n\nexport default ProfileInfo;","// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__lB-pf\",\"posts\":\"MyPosts_posts__GSiZ2\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__Yu4oG\"};","import React from \"react\";\nimport s from \"./Post.module.css\";\nimport avatar from \"../../../../assets/avatar_profile.jpg\";\n\n\nconst Post = (props) => {\n    return (\n        <div className={s.item}>\n            <img src={avatar} alt=\"\"/>\n            {props.message}\n            <div>\n                <span>like</span> {props.likesCount}\n            </div>\n        </div>\n    );\n}\n\n\nexport default Post;","import React from \"react\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {maxLengthCreator, requiredField} from \"../../../../utils/validators/validators\";\nimport {Textarea} from \"../../../common/FormsControls/FormsControls\";\n\nconst maxLength10 = maxLengthCreator(10);\n\nconst AddPostForm = (props) => {\n\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <div>\n                <Field component={Textarea} name=\"post\" type=\"text\" placeholder=\"Enter your post\" validate={[requiredField, maxLength10]}/>\n            </div>\n            <div>\n                <button>Add post</button>\n            </div>\n        </form>\n    )\n}\n\nconst AddPostReduxForm = reduxForm({form: \"addPostForm\"})(AddPostForm);\n\nexport default AddPostReduxForm;","import React from \"react\";\nimport s from \"./MyPosts.module.css\";\nimport Post from \"./Post/Post\";\nimport AddPostReduxForm from \"./PostForm/PostForm\";\n\n\nconst MyPosts = React.memo(({addPost, posts}) => {\n    let postsElements = posts.map(p => <Post message={p.message} likesCount={p.likesCount} id={p.id}\n                                             key={p.id}/>);\n    let addNewMessage = (postData) => {\n        addPost(postData.post);\n    }\n    return (\n        <div className={s.postsBlock}>\n            <h3>My posts</h3>\n            <AddPostReduxForm onSubmit={addNewMessage}/>\n            <div className={s.posts}>\n                {postsElements}\n            </div>\n        </div>\n    );\n})\n\n\nexport default MyPosts;","import {\n    addPost,\n} from \"../../../redux/profile-reducer\";\nimport MyPosts from \"./MyPosts\";\nimport {connect} from \"react-redux\";\n\n\nconst mapStateToProps = (state) => {\n    return {\n        posts: state.profilePage.posts,\n    }\n};\n\n\nconst MyPostsContainer = connect(mapStateToProps, {addPost})(MyPosts);\n\n\nexport default MyPostsContainer;","import React from \"react\";\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\n\n\nconst Profile = (props) => {\n\n    return (\n        <div>\n            <ProfileInfo  profile={props.profile} status={props.status} updateProfileStatus={props.updateProfileStatus}/>\n            <MyPostsContainer/>\n        </div>\n    );\n}\n\n\nexport default Profile;","import React, {useEffect} from \"react\";\nimport Profile from \"./Profile\";\nimport {connect} from \"react-redux\";\nimport {useNavigate, useParams} from \"react-router-dom\";\nimport {\n    getProfileStatus,\n    getUserProfile,\n    updateProfileStatus\n} from \"../../redux/profile-reducer\";\nimport {compose} from \"redux\";\n\n\n\nconst ProfileContainer = (props) => {\n    const params = useParams();\n    const navigate = useNavigate();\n    useEffect(() => {\n        let userId = params.userId || props.authUserId;\n        if (!userId) return navigate(\"/login\");\n        props.getUserProfile(userId);\n        props.getProfileStatus(userId);\n    }, [params.userId, props.authUserId, navigate]);\n    return (\n        <Profile {...props} profile={props.profile}/>\n    )\n\n\n\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        profile: state.profilePage.profile,\n        status: state.profilePage.status,\n        isAuth: state.auth.isAuth,\n        authUserId: state.auth.userId,\n    }\n}\n\n\n\n\nexport default compose(\n    connect(mapStateToProps, {getUserProfile,getProfileStatus, updateProfileStatus}),\n   )(ProfileContainer);\n\n","import React from \"react\";\nimport s from \"./FormsControls.module.css\"\n\nconst FormControl = ({input, meta, element, ...props}) => {\n    const hasError = meta.touched && meta.error;\n    return (\n        <div className={`${s.formControl} + ${hasError ? `${s.error}` : \"\"}`}>\n            {props.children}\n            {hasError\n                ?  <div className={s.messageError}>\n                    {hasError\n                        ? meta.error : undefined}\n                </div> : undefined}\n        </div>\n    )\n}\n\nexport const Textarea = (props) => {\n    const {input, meta, element, ...restProps} = props;\n    return (<FormControl {...props}>\n            <textarea {...input} {...restProps}/>\n    </FormControl>\n    )\n}\n\nexport const Input= (props) => {\n    const {input, meta, element, ...restProps} = props;\n    return (<FormControl {...props}>\n            <input {...input} {...restProps}/>\n        </FormControl>\n    )\n}\n\n","export const requiredField = value => {\n    if (value) {\n        return undefined;\n    } return \"required field\";\n}\n\nexport const maxLengthCreator = (maxLength) => (value) => {\n    if (value && value.length > maxLength) {\n        return `Max length is ${maxLength} symbols`\n    } return undefined;\n}","// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"FormsControls_formControl__NR1bV\",\"error\":\"FormsControls_error__wukgD\",\"messageError\":\"FormsControls_messageError__M-fxS\",\"formSummaryError\":\"FormsControls_formSummaryError__Rdvzq\",\"authForm\":\"FormsControls_authForm__uMX33\",\"rememberMeBlock\":\"FormsControls_rememberMeBlock__W2XYN\",\"rememberMe\":\"FormsControls_rememberMe__vkMIa\"};"],"names":["props","editMode","setEditMode","useState","status","setStatus","useEffect","_jsx","children","type","autoFocus","onBlur","deactivateEditMode","updateProfileStatus","value","onChange","e","currentTarget","onDoubleClick","activateEditMode","_ref","profile","_jsxs","className","s","src","photos","small","large","avatar","alt","fullName","ProfileStatusWithHooks","aboutMe","Preloader","message","likesCount","maxLength10","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","name","placeholder","validate","requiredField","React","addPost","posts","postsElements","map","p","Post","id","AddPostReduxForm","postData","post","connect","state","profilePage","MyPosts","ProfileInfo","MyPostsContainer","compose","isAuth","auth","authUserId","userId","getUserProfile","getProfileStatus","params","useParams","navigate","useNavigate","Profile","_objectSpread","FormControl","input","meta","element","_objectWithoutProperties","_excluded","hasError","touched","error","concat","formControl","messageError","undefined","restProps","_excluded2","Input","_excluded3","maxLength","length"],"sourceRoot":""}